{"version":3,"file":"static/js/744.d0b08d4f.chunk.js","mappings":"oLAMA,EAJiB,WACb,OAAO,gBAAKA,UAAU,cAAf,0CACV,C,sJCIKC,EACI,OADJA,EAEO,UAFPA,EAGQ,WAHRA,EAIQ,WAwDd,EArDgB,WACZ,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASH,GAArC,eAAOM,EAAP,KAAeC,EAAf,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACND,EAAUP,GACVS,EAAAA,GAAsBR,GAASS,MAAK,SAAAC,GAChCN,EAAWM,GACXJ,EAAUP,EACb,IACAY,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZN,EAAUP,EACb,GAEJ,GAAC,CAACC,IAEHa,QAAQC,IAAIX,GAERE,IAAWN,GACJ,SAACgB,EAAA,EAAD,IAGPV,IAAWN,GAEP,SAACiB,EAAA,EAAD,WACI,SAAC,IAAD,MAKRX,IAAWN,GAEP,UAACiB,EAAA,EAAD,WACKb,EAAQc,OAAS,GACd,eAAInB,UAAU,gBAAd,SACKK,EAAQe,KAAI,SAAAC,GACT,OACI,gBAAIrB,UAAU,gBAAd,WACI,wBAAKqB,EAAOC,UACZ,uBAAID,EAAOE,YAFoBF,EAAOG,GAKjD,OAEJ,SAAC,IAAD,IAZT,YAFR,CAkBH,C,oEChDD,EAdgB,SAACC,GACb,OACI,oBAASzB,UAAU,UAAnB,UACI,gBAAKA,UAAU,YAAf,SACKyB,EAAMC,YAItB,C,yLCVKC,E,QAAQC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAJhB,SAQiBC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,8FACeN,EAAMO,IAAN,oBAA8BvB,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IADrD,mHAIeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,iFACeX,EAAMO,IAAN,8BAAiCI,EAAjC,YAAuD3B,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IAD9E,mHAIeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BrC,GAA/B,iFACeyB,EAAMO,IAAN,gBAAmBhC,EAAnB,MAA+BS,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IADtD,mHAIeI,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCtC,GAAjC,iFACeyB,EAAMO,IAAN,gBAAmBhC,EAAnB,cAAuCS,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,KAAKK,IAAb,IAD9D,mHAIeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCxC,GAAjC,iFACeyB,EAAMO,IAAN,gBAAmBhC,EAAnB,cAAuCS,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,KAAKO,OAAb,IAD9D,0G","sources":["components/Error/Error.js","components/Reviews/Reviews.js","components/Section/Section.js","services/tmdb-api.js"],"sourcesContent":["import './Error.css';\n\nconst Rejected = () => {\n    return <div className='error__text'>Ooops. Something went wrong;(</div>;\n}\n\nexport default Rejected;","import { useState, useEffect } from 'react';\nimport * as Api from '../../services/tmdb-api';\nimport { useParams } from 'react-router';\nimport Loader from 'components/Loader/Loader';\nimport Section from 'components/Section/Section';\nimport Rejected from 'components/Error/Error';\nimport './Reviews.css';\n\nconst Status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected',\n  }\n\nconst Reviews = () => {\n    const {movieId} = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [status, setStatus] = useState(Status.IDLE);\n\n\n    useEffect(() => {\n        setStatus(Status.PENDING);\n        Api.fetchMovieReviews(movieId).then(movie => {\n            setReviews(movie);\n            setStatus(Status.RESOLVED);\n        })\n        .catch(error => {\n            console.log(error);\n            setStatus(Status.REJECTED);\n        })\n\n    },[movieId]);\n\n    console.log(reviews);\n\n    if (status === Status.PENDING) {\n        return <Loader />\n    }\n\n    if (status === Status.REJECTED) {\n        return (\n            <Section>\n                <Rejected />\n            </Section>\n        );\n    }\n\n    if (status === Status.RESOLVED) {\n        return (\n            <Section>\n                {reviews.length > 0? (\n                    <ul className='reviews__list'>\n                        {reviews.map(review => {\n                            return (\n                                <li className='reviews__item' key={review.id}>\n                                    <h3>{review.author}</h3>\n                                    <p>{review.content}</p>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                ) : (<Rejected />)};\n            </Section>\n        );\n    }\n};\n\nexport default Reviews;","import PropTypes from 'prop-types';\n\nimport './Section.css';\n\nconst Section = (props) => {\n    return (\n        <section className='section'>\n            <div className='container'>\n                {props.children}\n            </div>\n        </section>\n    );\n}\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import axios from \"axios\";\n\nconst AXIOS = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n      api_key: 'e38902030017580fbfa1d8a473a3610b',\n      language: 'en-US',\n    },\n  });\n\n  async function fetchTrendingMovies() {\n    return await AXIOS.get(`trending/all/day`).then(res => res.data);\n  }\n\n  async function searchMovie(inputSearch) {\n    return await AXIOS.get(`/search/movie?query=${inputSearch}&page=1`).then(res => res.data);\n  }\n\n  async function fetchAboutMovie(movieId) {\n    return await AXIOS.get(`movie/${movieId}?`).then(res => res.data);\n  }\n\n  async function fetchMovieCredits(movieId) {\n    return await AXIOS.get(`movie/${movieId}/credits?`).then(res => res.data.cast);\n  }\n\n  async function fetchMovieReviews(movieId) {\n    return await AXIOS.get(`movie/${movieId}/reviews?`).then(res => res.data.results);\n  }\n\n  export {\n    fetchTrendingMovies,\n    searchMovie,\n    fetchAboutMovie,\n    fetchMovieCredits,\n    fetchMovieReviews,\n  }"],"names":["className","Status","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","Api","then","movie","catch","error","console","log","Loader","Section","length","map","review","author","content","id","props","children","AXIOS","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","res","data","searchMovie","inputSearch","fetchAboutMovie","fetchMovieCredits","cast","fetchMovieReviews","results"],"sourceRoot":""}